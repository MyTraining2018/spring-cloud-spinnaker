spinnaker:
  modules:
    - name: clouddriver
      artifact: org.springframework.cloud:clouddriver-app:1.0.0.BUILD-SNAPSHOT
      properties:
        spring.cloud.deployer.cloudfoundry.memory: 4096
        spring.cloud.deployer.cloudfoundry.disk: 2048
        cf.asyncOperationTimeoutSecondsDefault: 1200 # 20 minutes
    - name: deck
      artifact: com.netflix.spinnaker.deck:deck-ui:2.803.0
      properties:
        buildpack: staticfile_buildpack
    - name: echo
      artifact: echo-web
      properties:
        front50.baseUrl: ${services.front50.baseUrl}
        orca.baseUrl: ${services.orca.baseUrl}
    - name: front50
      artifact: front50-web
    - name: gate
      artifact: gate-web
    - name: igor
      artifact: igor-web
      properties:
        spring.profiles.active: jenkins,travis
    - name: orca
      artifact: orca-web
      properties:
        bakery.baseUrl: ${services.default.protocol}://localhost:8087  # We don't use the bakery, but this prop must be set
        echo.enabled: ${services.echo.enabled}
        echo.baseUrl: ${services.echo.baseUrl}
        front50.baseUrl: ${services.front50.baseUrl}
        igor.baseUrl: ${services.igor.baseUrl}
        tide.baseUrl: ${services.front50.baseUrl}
        oort.baseUrl: ${services.clouddriver.baseUrl}
        mort.baseUrl: ${services.clouddriver.baseUrl}
        kato.baseUrl: ${services.clouddriver.baseUrl}
#      services:
#        - spinnaker-redis
  properties:
    okHttpClient.readTimeoutMs: 60000
#    JBP_CONFIG_DEBUG: '{enabled: true}' # Reenable and then cf restage if you need to remotely debug
    providers.cf.enabled: true
    providers.cf.primaryCredentials.name: ${deck.primaryAccount}
#    spring.config.location: https://raw.githubusercontent.com/{org}/spinnaker-config/{label}/spinnaker.yml,https://raw.githubusercontent.com/{org}/spinnaker-config/{label}/spinnaker-local.yml,https://raw.githubusercontent.com/{org}/spinnaker-config/{label}/{module}.yml,https://raw.githubusercontent.com/{org}/spinnaker-config/{label}/{module}-local.yml
    redis.configuration.secure: true
    redis.connection: ${cloud.services.redis.connection.scheme}://username:${cloud.services.redis.connection.password}@${cloud.services.redis.connection.host}:${cloud.services.redis.connection.port}
    services.default.protocol: https
    services.clouddriver.host: clouddriver
    services.clouddriver.port: 80
    services.clouddriver.baseUrl: ${services.default.protocol}://${services.clouddriver.host}${namespace}.${deck.domain}
    services.echo.enabled: true
    services.echo.host: echo
    services.echo.port: 80
    services.echo.baseUrl: ${services.default.protocol}://${services.echo.host}${namespace}.${deck.domain}
    services.front50.host: front50
    services.front50.port: 80
    services.front50.baseUrl: ${services.default.protocol}://${services.front50.host}${namespace}.${deck.domain}
    services.gate.host: gate
    services.gate.port: 80
    services.gate.baseUrl: ${services.default.protocol}://${services.gate.host}${namespace}.${deck.domain}
    services.igor.enabled: true
    services.igor.host: igor
    services.igor.port: 80
    services.igor.baseUrl: ${services.default.protocol}://${services.igor.host}${namespace}.${deck.domain}
    services.orca.host: orca
    services.orca.port: 80
    services.orca.baseUrl: ${services.default.protocol}://${services.orca.host}${namespace}.${deck.domain}
    services.default.primaryAccountName: ${deck.primaryAccount}
    spinnaker.baseUrl: ${services.default.protocol}://deck${namespace}.${deck.domain}
    cassandra.enabled: ${spinnaker.cassandra.enabled}
    spinnaker.cassandra.enabled: false
    spinnaker.cassandra.embedded: ${spinnaker.cassandra.enabled}
    spinnaker.redis.enabled: true
    spinnaker.inMemory.enabled: true

security:
  user:
    name: user
    password: password

multipart:
  max-file-size: 100Mb
  max-request-size: 100Mb

logging:
  level:
    cloudfoundry-client: DEBUG
    reactor:
      core: DEBUG
    org:
      cloudfoundry: DEBUG
      springframework:
#        web: TRACE
        cloud:
          deployer: DEBUG
          spinnaker: DEBUG
